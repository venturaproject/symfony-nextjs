services:
    # Commands Handlers
    App\Products\Application\Commands\Create\CreateProductHandler:
        arguments:
            $repository: '@App\Products\Domain\Repository\ProductRepositoryInterface'
            $eventDispatcher: '@event_dispatcher'
        tags: ['messenger.message_handler']

    App\Products\Application\Commands\Update\UpdateProductHandler:
        arguments:
            $repository: '@App\Products\Domain\Repository\ProductRepositoryInterface'
            $eventDispatcher: '@event_dispatcher'
        tags: ['messenger.message_handler']

    App\Products\Application\Commands\Delete\DeleteProductHandler:
        arguments:
            $repository: '@App\Products\Domain\Repository\ProductRepositoryInterface'
        tags: ['messenger.message_handler']

    # Queries Handlers
    App\Products\Application\Queries\GetAll\GetAllProducts:
        tags: ['messenger.message_handler']

    App\Products\Application\Queries\GetById\GetProductByIdHandler:
        tags: ['messenger.message_handler']

    # Message Services
    App\Products\Application\Messages\ProductUpdatedMessageHandler:
        arguments:
            $logger: '@logger'
        tags: ['messenger.message_handler']

    # Event Listeners
    App\Products\Application\EventListener\ProductAddedListener:
        arguments:
            $emailService: '@App\Shared\Application\Services\EmailService'

    # Event Subscribers
    App\Products\Application\EventSubscriber\ProductLoggingSubscriber:
        arguments:
            $logger: '@logger'
        tags:
            - { name: doctrine.event_subscriber }
